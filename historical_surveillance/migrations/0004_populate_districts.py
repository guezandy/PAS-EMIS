# Generated by Django 3.1.7 on 2021-04-21 18:21
import logging
import csv

from django.db import models, migrations
from django.core.management.sql import emit_post_migrate_signal

from emis.groups import build_groups
from historical_surveillance.models import District, School

LOGGER = logging.getLogger(__name__)


def populate_district_and_school(apps, schema_editor):
    """
    PRS 22-Mar 2021: some helpful resources discussing this approach...

    https://stackoverflow.com/questions/25024795/django-1-7-where-to-put-the-code-to-add-groups-programmatically/25803284
    https://stackoverflow.com/questions/38491215/programmatically-creating-a-group-cant-access-permissions-from-migration/38491679#38491679
    """
    emit_post_migrate_signal(2, False, "default")

    # Populate data from CSV
    path = (
        "historical_surveillance/migrations/data/historical_surveillance_district.csv"
    )
    with open(path) as f:
        reader = csv.reader(f)
        for row in reader:
            _, created = District.objects.get_or_create(
                id=row[0],
                created_at=row[1],
                created_by=row[2],
                district_code=row[3],
                district_name=row[4],
                updated_at=row[5],
                updated_by=row[6],
            )


class Migration(migrations.Migration):
    dependencies = [
        ("historical_surveillance", "0003_auto_20210419_2046"),
    ]

    operations = [
        migrations.RunPython(populate_district_and_school),
    ]
